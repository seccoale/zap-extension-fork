#X-Generator: crowdin.net
alertreport.export.message.menuitem=Exportar reporte de Alerta
alertreport.export.message.desc=Exportar un reporte de alertas en formato PDF o ODT para revisi\u00f3n.\nIngresar los datos en el campo de la alerta denominada 'Other Info', como se muestra a continuaci\u00f3n, para enunciar los pasos de reproducci\u00f3n del problema.\nLa primer linea debe describir el test de la prueba y la siguiente linea el nombre de la imagen tomada como prueba. Por ejemplo\:\n\nIngresamos en la URL del sitio y el sistema muestra la siguiente pantalla.\nDV-005-ImageTest1.png\nLuego inyectamos c\u00f3digo malicioso.\nDV-005-ImageTest2.png\n\nAl exportar una o varias alertas, el sistema genera el reporte de alertas seg\u00fan el tipo de formato elegido y con los pasos de cada alerta, seg\u00fan los datos del campo 'Other Info', obteniendo las im\u00e1genes de la ruta de im\u00e1genes que se configura en la configuraci\u00f3n del plugin.
alertreport.export.message.export.ok=Exportaci\u00f3n realizada
alertreport.export.message.export.fail=Exportaci\u00f3n cancelada
alertreport.export.message.export.pdf.description=Descripci\u00f3n
alertreport.export.message.export.pdf.risk=Riesgo
alertreport.export.message.export.pdf.reability=Confiabilidad
alertreport.export.message.export.pdf.urls=URLs vulnerables
alertreport.export.message.export.pdf.attack=Ataque
alertreport.export.message.export.pdf.image=Imagen
alertreport.export.message.export.pdf.solution=Recomendaci\u00f3n
alertreport.export.message.export.pdf.references=Referencias
alertreport.export.message.export.pdf.title=Titulo del Reporte
alertreport.export.message.export.pdf.parameters=Par\u00e1metros
alertreport.export.message.export.pdf.customername=Nombre del Cliente
alertreport.export.message.export.pdf.confidential=Confidencial
alertreport.export.message.export.option.desc=Opciones para generar un reporte   
alertreport.export.message.export.option.logofilename=Logo de la Empresa
alertreport.export.message.export.option.imagesdir=Directorio de Images
alertreport.export.message.export.option.title=Reporte
alertreport.export.message.export.option.companyname=Nombre de la Empresa
alertreport.export.message.export.option.authorname=Autores
alertreport.export.message.export.option.format=Formato
alertreport.export.message.export.option.documentattach=Adjuntar Documento
alertreport.export.message.export.option.distintformat=El tipo de archivo no concuerda con el documento adjuntado.
alertreport.export.menu.report.generate=Generar Reporte de Alertas
alertreport.export.report.title.default=Hacking \u00c9tico Reporte de Alertas
alertreport.export.report.keywords.default=reporte, alerta,pentest,seguridad
alertreport.export.report.title.customername.default=Nombre del Cliente
alertreport.export.report.confidentialtext.default=El presente documento es CONFIDENCIAL y para el USO EXCLUSIVO al que est\u00e1 dirigido. Contiene informaci\u00f3n que es propiedad intelectual de COMPANYNAME, por lo que su contenido no debe ser copiado, enviado, revelado o utilizado por terceras partes, en cualquier forma no autorizada expresamente por COMPANYNAME. La recepci\u00f3n y uso del presente documento por el destinatario, implica la aceptaci\u00f3n expl\u00edcita de la presente Cl\u00e1usula. En igual sentido COMPANYNAME, tratar\u00e1 como CONFIDENCIALES y para su USO EXCLUSIVO los datos que reciba y en caso de realizarse los trabajos propuestos, antes del inicio de los mismos firmar\u00e1n el correspondiente Convenio de Confidencialidad.
alertreport.export.report.authorname.default=Nombre del Autor
alertreport.export.report.companyname.default=Nombre de la empresa
alertreport.export.pluginid.risk.0                    =   Información
alertreport.export.pluginid.risk.1                    =   Bajo
alertreport.export.pluginid.risk.2                    =   Medio
alertreport.export.pluginid.risk.3                    =   Alto
alertreport.export.pluginid.reliability.1             =   Falso Positivo
alertreport.export.pluginid.reliability.2             =   Sospechoso
alertreport.export.pluginid.reliability.3             =   Alerta
alertreport.export.pluginid.10010.name                =   Cookie sin atributo HttpOnly
alertreport.export.pluginid.10010.description         =   Una cookie sin el atributo HttpOnly, significa que una cookie puede ser accedida por JavaScript.\r\n Si un malicioso script se ejecuta en esa página entonces la cookie puede ser accesible y puede ser transmitida al atacante. \r\n Si esto es una session cookie entonces sesion hijacking puede ser explotada.   
alertreport.export.pluginid.10010.solution            =   Asegurar que se setee el atributo HttpOnly en todas la cookies.
alertreport.export.pluginid.10011.name                =   Cookie sin atributo Secure.
alertreport.export.pluginid.10011.description         =   Una cookie sin el atributo Secure, significa que esa cookie es accesible en conexiones sin encriptar.
alertreport.export.pluginid.10011.solution            =   Cuando una cookie contiene información sensible o es un token session, siempre se debería usar dentro de un canal cifrado.\r\n Asegure que el atributo Secure este en todas las cookies que contengan información sensible.
alertreport.export.pluginid.10012.name                =   Autocompletado del Password en navegador 
alertreport.export.pluginid.10012.description         =   El atributo AUTOCOMPLETE no esta deshabilitado en elementos HTML INPUT tipo password.  Estos Passwords son almacenadas por los navegadores y cargadas automáticamente.
alertreport.export.pluginid.10012.solution            =   Desactivar el atributo AUTOCOMPLETE en los formularios o elementos que contengan el atributo Passwords usando AUTOCOMPLETE='OFF'
alertreport.export.pluginid.10013.name                =   Débil método de autenticación
alertreport.export.pluginid.10013.description         =   Autenticación HTTP basic o Digest pueden estar siendo usado sobre conexiones inseguras. Las credenciales pueden ser leídas y reusadas por el atacante para acceder al recurso.
alertreport.export.pluginid.10013.solution            =   Proteger la conexión usando HTTPS o usar un mecanismo fuerte de autenticación.
alertreport.export.pluginid.10014.name                =   Cross Site Request Forgery
alertreport.export.pluginid.10014.description         =   Una falsificación de petición en sitios cruzados es un ataque que consiste en obligar a la víctima a enviar una petición HTTP a un punto de destino sin su conocimiento o intención con el fin de realizar una acción como la víctima. La causa es la funcionalidad de la aplicación utilizando predecibles URL / form acciones de una manera repetible. La naturaleza del ataque CSRF es que explota la confianza que un sitio web tiene para un usuario. Por el contrario, cross-site scripting (XSS) explota la confianza que un usuario tiene un sitio web. Al igual que XSS, CSRF ataques no son necesariamente entre sitios, pero que pueden ser. Cross-site request forgery también se conoce como CSRF, XSRF. \r\n Ataques CSRF son eficaces en un número de situaciones, incluyendo:  \r\n* La víctima tiene una sesión activa en el sitio de destino.  \r\n* La víctima se verifica a través de HTTP de autenticación en el sitio de destino.   \r\n* La víctima está en la misma red local que el sitio de destino. \r\n CSRF ha sido utilizado principalmente para realizar una acción en contra de un sitio de destino con privilegios de la víctima, pero las técnicas recientes se han descubierto a divulgar información mediante el acceso a la respuesta. El riesgo de divulgación de información se incrementa dramáticamente cuando el sitio es vulnerable a XSS, porque XSS se puede utilizar como una plataforma para CSRF, lo que permite el ataque a operar dentro de los límites de la política del mismo origen. 
alertreport.export.pluginid.10014.solution            =   Fase: Arquitectura y Diseño \r\n Utilice una libreria que no permita que se produzca esta debilidad o proporciona construcciones que hacen que esta debilidad más fácil evitar. \r\n Por ejemplo, el uso de anti-CSRF paquetes como el CSRFGuard OWASP. \r\n Fase: Implementación \r\n Asegúrese de que su aplicación está libre de problemas de cross-site scripting, porque la mayoría de las defensas CSRF puede ser evitado usando controlado por el atacante guión.\r\n Fase: Arquitectura y Diseño \r\n Generar un token único para cada formulario , y verificar el token a la recepción de la solicitud. Asegúrese de que el token no es predecible (CWE-330). \r\n Tenga en cuenta que esto puede ser evitada utilizando XSS.Identificar las operaciones especialmente peligrosas. Cuando el usuario realiza una operación peligrosa, enviar una solicitud de confirmación independiente para garantizar que el usuario previsto para realizar esta operación.Tenga en cuenta que esto puede ser evitada utilizando XSS. \r\n Utilice la Sesión ESAPI control de gestión.Este control incluye un componente para CSRF.No utilice el método GET para cualquier solicitud que desencadena un cambio de estado.\r\n Fase: Implementación \r\n Comprobar el encabezado HTTP Referer para ver si la petición se originó a partir de una página de espera. Esto podría romper la funcionalidad legítima, ya que los usuarios o servidores proxy puede haber bloqueado el envío el Referer por razones de privacidad.
alertreport.export.pluginid.10015.name                =   Cache-control incompleto o no seteado y pragma HTTPHeader 
alertreport.export.pluginid.10015.description         =   El cache-control y pragma HTTPHeader que no se han seteado correctamente, permiten al navegador y los proxies cachear el contenido.
alertreport.export.pluginid.10015.solution            =   Cuando sea posible setear en el HTTPHeader el cache-control con valores no-cache, no-store, must-revalidate, private, y el pragma HTTPHeader con valor no-cache.
alertreport.export.pluginid.10016.name                =   Filtro de protección IE8's XSS no deshabilitado 
alertreport.export.pluginid.10016.description         =   El atributo del header x-xss-protection header ha sido deshabilitado por la aplicación web.
alertreport.export.pluginid.10016.solution            =   Habilitar el filtro IE's XSS. Si este filtro esta deshabilitado por alguna razón, asegurar que la aplicación este protegida ante la vulnerabilidad de XSS.
alertreport.export.pluginid.10017.name                =   Cross-domain JavaScript con inclusión de origen
alertreport.export.pluginid.10017.description         =   La página permite incluir URL de uno o mas archivos scripts de otros dominios.
alertreport.export.pluginid.10017.solution            =   Asegurar que la inclusión de archivos JavaScript sean cargados de origenes confiables, y que los la inclusión de estos, no puedan ser controlados por los usuarios de la aplicación.
alertreport.export.pluginid.10019.name                =   El atributo del Header Content-Type falta o esta vacío. 
alertreport.export.pluginid.10019.description         =   El atributo del Header Content-Type falta o esta vacío.
alertreport.export.pluginid.10019.solution            =   Asegurar que cada página este seteada el atributo Content-type de acuerdo al contenido.
alertreport.export.pluginid.10020.name                =   Atributo del Header X-Frame-Options no seteado
alertreport.export.pluginid.10020.description         =   El atributo del Header X-Frame-Options no fue seteado para defenderse contra ataques 'ClickJacking'.
alertreport.export.pluginid.10020.solution            =   La mayoría de los navegadores modernos, soportan el atributo Header X-Frame-Options HTTP, asegurar que este este seteado en todas las páginas referidas al sitio (si espera que la página que se enmarca en FRAMES sólo por páginas de su servidor (por ejemplo, forma parte de un conjunto de FRAMES), entonces usted querrá usar SAMEORIGIN, de lo contrario si no se espera que la página que se enmarca, debe utilizar DENY.
alertreport.export.pluginid.10021.name                =   Atributo del Header X-Content-Type-Options no seteado
alertreport.export.pluginid.10021.description         =   El atributo del Header X-Content-Type-Options no debe ser seteado con 'nosniff'.
alertreport.export.pluginid.10021.solution            =   Este chequeo es especifico para IE8 y google chrome. Asegurar que cada página tenga seteado un Content-Type header y el X-CONTENT-TYPE-OPTIONS si el  Content-Type header es desconocido.
alertreport.export.pluginid.10022.name                =   Revelación de información - Errores de base de datos 
alertreport.export.pluginid.10022.description         =   En la respuesta de la petición parece tener un mensaje de error de la base de datos, lo cual indica que puede haber un potencial ataque SQL injection.
alertreport.export.pluginid.10022.solution            =   Deshabilitar los mensages de error base de datos o verificar el manejo de errores de la aplicación,  antes de poner el sistema en producción.
alertreport.export.pluginid.10023.name                =   Revelación de información - Errores de debugs 
alertreport.export.pluginid.10023.description         =   La respuesta de la petición parece tener un mensaje de error de ASP.NET, y servidores web como IIS y Apache.
alertreport.export.pluginid.10023.solution            =   Deshabilitar los mensages de error de debug de la base de datos o verificar el manejo de errores de la aplicación,  antes de poner el sistema en producción.
alertreport.export.pluginid.10024.name                =   Revelación de información - Información sensible en URL 
alertreport.export.pluginid.10024.description         =   La petición parece tener información sensible en la URL. Esto puede violar las políticas PCI y de las mayoría de las políticas de las organizaciones. 
alertreport.export.pluginid.10024.solution            =   No se debe pasar información sensible en las peticiones.
alertreport.export.pluginid.10025.name                =   Revelación de información - Información sensible en HTTP Referrer header
alertreport.export.pluginid.10025.description         =   El HTTP Header parece tener exponer parámetros sensibles de otro dominio. Esto puede violar las políticas PCI y de las mayoría de las políticas de las organizaciones. 
alertreport.export.pluginid.10025.solution            =   No se debe pasar información sensible en las peticiones.
alertreport.export.pluginid.10027.name                =   Revelación de información - Comentarios sospechosos
alertreport.export.pluginid.10027.description         =   La respuesta parece contener comentarios sospechosos que pueden ayudar al atacante.
alertreport.export.pluginid.10027.solution            =   Remover todos los comentarios que supongan dar ayuda al atacante.
alertreport.export.pluginid.00000.name                =   Indexación de directorio.
alertreport.export.pluginid.00000.description         =   Es posible ver el listado del directorio. Listado del directorio puede revelar guiones ocultos, incluir archivos de copia de seguridad, etc archivos de código fuente que puede acceder para leer la información sensible.
alertreport.export.pluginid.00000.solution            =   Desactivar la exploración de directorios. Si esto es necesario, asegúrese de que los archivos de la lista no provoca riesgos.
alertreport.export.pluginid.40004.name                =   Inyección SQL FingerPrinting
alertreport.export.pluginid.40004.description         =   Es posible una Inyección SQL.
alertreport.export.pluginid.40004.solution            =   No confiar en la entrada del lado del cliente incluso si no es la validación del lado del cliente. En general,\r\nSi la cadena de entrada es de tipo numérico, compruébelo.\r\nSi la aplicación utiliza JDBC, utilice PreparedStatement o CallableStatement con parámetros pasados por "?"\r\nSi la aplicación utiliza ASP, utiliza objetos ADO con comprobación de tipos fuertes y consulta parametrizada\r\nSi se almacena variables de procedimiento o de vinculación puede ser utilizado, lo utilizan para el paso de parámetros en la consulta. No se limite a concatenar cadena en consulta en el procedimiento almacenado!\r\nNo cree consulta SQL dinámica mediante concatenación de cadena simple.\r\nUtilice privilegios mínimo de usuario de base de datos para la aplicación. Esto no elimina la inyección SQL, pero minimizar su daño.\r\n
alertreport.export.pluginid.40005.name                =   Inyección SQL
alertreport.export.pluginid.40005.description         =   Es posible una Inyección SQL. Los parámetros de usuario presentadas se formulará en una consulta SQL para el procesamiento de base de datos. Si la consulta está integrada por "concatenación de cadenas 'simple, es posible modificar el significado de la consulta por creando cuidadosamente los parámetros. Dependiendo de los derechos de acceso y el tipo de base de datos utilizado, manipulado consulta se puede utilizar para recuperar información sensible de la base de datos o ejecutar código arbitrario. MS SQL y PostgreSQL, que soporta varias instrucciones, se puede aprovechar si el acceso a la base derecha es más potente.\r\nEsto puede ocurrir en cadenas de consulta URL, parametros de correos o incluso galletas. Actualmente comprobar cookie no es compatible con Paros. Usted debe verificar inyección SQL manualmente, así como algunas zonas ciegas de inyección SQL no se puede descubrir por esta comprobación.\r\n
alertreport.export.pluginid.40005.solution            =   No confiar en la entrada del lado del cliente incluso si no es la validación del lado del cliente. En general,\r\nSi la cadena de entrada es de tipo numérico, compruébelo.\r\nSi la aplicación utiliza JDBC, utilice PreparedStatement o CallableStatement con parámetros pasados por "?"\r\nSi la aplicación utiliza ASP, utiliza objetos ADO con comprobación de tipos fuertes y consulta parametrizada\r\nSi se almacena variables de procedimiento o de vinculación puede ser utilizado, lo utilizan para el paso de parámetros en la consulta. No se limite a concatenar cadena en consulta en el procedimiento almacenado!\r\nNo cree consulta SQL dinámica mediante concatenación de cadena simple.\r\nUtilice privilegios mínimo de usuario de base de datos para la aplicación. Esto no elimina la inyección SQL, pero minimizar su daño.\r\n
alertreport.export.pluginid.40012.name                =   Cross Site Scripting 
alertreport.export.pluginid.40012.description         =   Cross-site Scripting (XSS) es una técnica de ataque que consiste en la ejecución de un código suministrado por el atacante a instancia del navegador de un usuario. A instancia del navegador puede ser un cliente de navegador web estándar o un objeto de navegador integrado en un producto de software como el navegador dentro de WinAmp, un lector de RSS, o un cliente de correo electrónico. El código en sí se suele escribir en HTML / JavaScript, pero también puede extenderse a VBScript, ActiveX, Java, Flash o cualquier otra tecnología en navegador compatible. \r\nCuando un atacante consigue que el navegador de un usuario para ejecutar su / su código, el código se ejecutará en el contexto de seguridad (o zona) del sitio web de alojamiento. Con este nivel de privilegio, el código tiene la capacidad de leer, modificar y transmitir los datos confidenciales accesibles por el navegador. Un usuario con secuencia de comandos en sitios cruzados podría tener su / su cuenta secuestrada (robo de cookies), el navegador redirecciona a otra ubicación, o, posiblemente, se muestra el contenido fraudulento emitido por el sitio web que está visitando. Cross-site Scripting ataca esencialmente poner en peligro la relación de confianza entre un usuario y el sitio web. Las aplicaciones que utilizan instancias del navegador de objetos que cargan el contenido del sistema de archivos puede ejecutar código en la zona del equipo local que permita comprometer el sistema.\r\n Hay tres tipos de ataques de Cross-site Scripting: no persistentes, persistentes y DOM-based.\r\nNo persistentes ataques y ataques basados \u200B\u200Ben DOM requiere un usuario para que visite cualquiera de los dos un vínculo especialmente diseñado atada con código malicioso, o visite una página web maliciosa que contenga un formulario web, que cuando se publiquen en el sitio vulnerable, se montará el ataque. Mediante un formulario malicioso a menudo se llevará a cabo cuando el recurso vulnerable sólo acepta solicitudes HTTP POST. En tal caso, la forma puede ser presentada de forma automática, sin el conocimiento de la víctima (por ejemplo, mediante el uso de JavaScript). Al hacer clic en el enlace malicioso o malintencionado de enviar el formulario, la carga útil XSS se hizo eco de la espalda y se conseguirá interpretado por el navegador del usuario y ejecutar. Otra técnica para enviar solicitudes casi arbitrarias (GET y POST) es mediante el uso de un cliente integrado, como Adobe Flash.\r\nLos ataques persistentes se producen cuando el código malicioso se somete a un sitio web donde se almacena durante un período de tiempo. Ejemplos de objetivos favoritos de un atacante a menudo incluyen los puestos del boletín de mensajes, mensajes de correo web y software de chat en la web. El usuario desprevenido no está obligado a interactuar con cualquier otro sitio adicional / enlace (por ejemplo, un sitio atacante o un enlace malicioso enviado por correo electrónico), simplemente ver la página web que contiene el código.\r\n
alertreport.export.pluginid.40012.solution            =   Fase: Arquitectura y Diseño\r\nUtilice una librería que no permite que se produzca esta debilidad o proporciona construcciones que hacen que esta debilidad más fácil evitar.\r\nEjemplos de bibliotecas y los marcos que lo hacen más fácil de generar como salida correctamente codificado incluyen Anti-XSS de Microsoft biblioteca, el módulo ESAPI OWASP Encoding, y Wicket Apache.\r\nFases: Implementación, Arquitectura y Diseño\r\nComprender el contexto en el que sus datos serán utilizados y la codificación que se esperaba. Esto es especialmente importante cuando la transmisión de datos entre los diferentes componentes, o cuando la generación de salidas que pueden contener múltiples codificaciones, al mismo tiempo, tales como páginas web o de múltiples partes mensajes de correo. Estudiar todos los protocolos de comunicación esperados y representaciones de datos para determinar las estrategias de codificación requeridas.\r\nPor los datos que se imprimirán en otra página web, especialmente los datos que se han recibido de los insumos externos, utilice la codificación adecuada en todos los caracteres no alfanuméricos.\r\nConsultar la Hoja de Prevención Cheat XSS para más detalles sobre los tipos de codificación y escape que son necesarios.\r\nFase: Arquitectura y Diseño\r\nPara los controles de seguridad que se realizan en el lado del cliente, asegúrese de que estos controles están duplicados en el lado del servidor, con el fin de evitar CWE-602. Los atacantes pueden pasar por alto los controles del lado del cliente mediante la modificación de los valores después de los controles se han realizado, o cambiando el cliente para eliminar los controles del lado del cliente por completo. Luego, estos valores modificados se envían al servidor.\r\nSi está disponible, utilizar mecanismos estructurados que aplicar automáticamente la separación entre datos y código. Estos mecanismos pueden ser capaces de proporcionar la cotización pertinentes, codificación y validación automáticamente, en lugar de confiar en el programador para proporcionar esta capacidad en cada punto donde se genera salida.\r\nFase: Implementación\r\nPor cada página web que se genera, utiliza y especificar una codificación de caracteres como ISO-8859-1 o UTF-8. Cuando una codificación no se especifica, el navegador web puede elegir una codificación diferente, estimando que la codificación está siendo realmente utilizada por la página web. Esto puede hacer que el navegador web para el tratamiento de ciertas secuencias tan especial, la apertura del cliente a ataques XSS. Ver CWE-116 para más medidas de mitigación relacionadas con la codificación / escape.\r\n



